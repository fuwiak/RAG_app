import { writable, derived } from 'svelte/store';

export type Language = 'en' | 'ru';

export const currentLanguage = writable<Language>('en');

// Translations object
export const translations = {
  en: {
    // App navigation
    app_title: 'RAG App',
    nav_rag: 'RAG',
    nav_rag_description: 'Document Retrieval',
    nav_finetune: 'Fine-tune',
    nav_finetune_description: 'Model Training',
    nav_playground: 'Playground', 
    nav_playground_description: 'Test Models',
    nav_monitor: 'Monitor',
    nav_monitor_description: 'System & Metrics',
    status_ready: 'Ready',
    
    // RAG Panel
    rag_title: 'RAG App',
    rag_subtitle: 'Retrieval-Augmented Generation Assistant',
    tab_chat: 'Chat',
    tab_documents: 'Documents',
    tab_search: 'Search',
    tab_rag_config: 'RAG Config',
    tab_rag_test: 'Test RAG',
    
    // Chat interface
    chat_placeholder: 'Ask me anything about your documents... e.g., "What are the key findings in the Q3 report?"',
    chat_send: 'Send',
    chat_clear: 'Clear Chat',
    chat_welcome_title: 'Welcome to your RAG Assistant! üëã',
    chat_welcome_desc: 'Ask questions about your uploaded documents and I\'ll help you find answers.',
    
    // Documents
    documents_upload: 'Upload Documents',
    documents_drop_zone: 'Drop your files here or click to select',
    documents_supported: 'Supported formats: PDF, TXT, MD, DOCX',
    documents_delete: 'Delete',
    documents_view: 'View',
    documents_no_docs: 'No documents uploaded yet',
    documents_library: 'Document Library',
    documents_upload_first: 'Upload your first document to get started.',
    documents_start_chatting: 'Upload some documents to start chatting with your knowledge base.',
    
    // Upload features
    instant_processing: 'Instant processing',
    secure_private: 'Secure & private',
    ai_powered_analysis: 'AI-powered analysis',
    
    // Chat suggestions
    summarize_topics: 'Summarize topics',
    key_insights: 'Key insights',
    important_dates: 'Important dates',
    
    // Search
    search_placeholder: 'Search in documents... e.g., "machine learning algorithms"',
    search_button: 'Search',
    search_no_results: 'No results found',
    search_documents: 'Search Documents',
    search_results: 'Search Results',
    
    // RAG Config
    config_title: 'RAG Configuration',
    config_subtitle: 'Configure your RAG pipeline settings',
    config_embedding_model: 'Embedding Model',
    config_mode: 'RAG Mode',
    config_chunk_size: 'Chunk Size',
    config_chunk_overlap: 'Chunk Overlap',
    config_top_k: 'Top K Results',
    config_similarity_threshold: 'Similarity Threshold',
    config_save: 'Save Configuration',
    config_reset: 'Reset to Defaults',
    
    // Test RAG
    test_title: 'RAG Testing',
    test_subtitle: 'Test your RAG configuration with sample queries',
    test_query_placeholder: 'Enter your test query... e.g., "Explain the methodology described in the research paper"',
    test_run: 'Run Test',
    test_results: 'Test Results',
    test_query_label: 'Test Query:',
    
    // Fine-tune Panel
    finetune_title: 'Advanced Fine-Tuning',
    finetune_subtitle: 'Professional model training with LoRA, QLoRA, and RAG optimization',
    finetune_config: 'Configuration',
    finetune_models: 'Models',
    finetune_logs: 'Training Logs',
    finetune_charts: 'Loss Charts',
    finetune_dataset: 'Training Dataset',
    finetune_model: 'Base Model',
    finetune_parameters: 'Training Parameters',
    finetune_start: 'Start Training',
    finetune_stop: 'Stop Training',
    finetune_progress: 'Training Progress',
    finetune_epochs: 'Epochs',
    finetune_learning_rate: 'Learning Rate',
    finetune_batch_size: 'Batch Size',
    finetune_basic_config: 'Basic Configuration',
    finetune_lora_config: 'LoRA & QLoRA Configuration',
    finetune_training_params: 'Training Parameters',
    finetune_rag_settings: 'RAG-Specific Settings',
    finetune_advanced_config: 'Advanced Configuration',
    finetune_models_manage: 'Manage your trained models and configurations',
    finetune_logs_monitor: 'Monitor your fine-tuning progress in real-time',
    finetune_charts_visualize: 'Visualize training loss and performance metrics',
    
    // Advanced Configuration
    advanced_config: 'Advanced Configuration',
    save_steps: 'Save Steps',
    eval_steps: 'Evaluation Steps',
    logging_steps: 'Logging Steps',
    dataloader_workers: 'DataLoader Workers',
    instruction_template: 'Instruction Template',
    training_summary: 'Training Summary',
    default_template: 'Default',
    
    // Playground Panel
    playground_title: 'Playground',
    playground_subtitle: 'Interactive model testing environment',
    playground_prompt: 'Enter your prompt here...',
    playground_prompt_placeholder: 'e.g., "Write a summary of the key findings in artificial intelligence research..."',
    playground_model_select: 'Select Model',
    playground_temperature: 'Temperature',
    playground_max_tokens: 'Max Tokens',
    playground_generate: 'Generate',
    playground_clear: 'Clear',
    playground_response: 'Model Response',
    
    // Monitor Panel
    monitor_title: 'Monitor',
    monitor_subtitle: 'Real-time system monitoring and analytics',
    monitor_overview: 'Overview',
    monitor_system: 'System',
    monitor_tokens: 'Tokens',
    monitor_metrics: 'Metrics',
    monitor_logs: 'Logs',
    monitor_cpu_usage: 'CPU Usage',
    monitor_memory_usage: 'Memory Usage',
    monitor_disk_usage: 'Disk Usage',
    monitor_network: 'Network',
    monitor_uptime: 'Uptime',
    monitor_requests: 'Requests',
    monitor_errors: 'Errors',
    
    // Common actions
    save: 'Save',
    cancel: 'Cancel',
    edit: 'Edit',
    delete: 'Delete',
    upload: 'Upload',
    download: 'Download',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info'
  },
  ru: {
    // App navigation
    app_title: 'RAG –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
    nav_rag: 'RAG',
    nav_rag_description: '–ü–æ–∏—Å–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º',
    nav_finetune: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞',
    nav_finetune_description: '–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏',
    nav_playground: '–ü–µ—Å–æ—á–Ω–∏—Ü–∞',
    nav_playground_description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π',
    nav_monitor: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
    nav_monitor_description: '–°–∏—Å—Ç–µ–º–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏',
    status_ready: '–ì–æ—Ç–æ–≤',
    
    // RAG Panel
    rag_title: 'RAG –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
    rag_subtitle: '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π',
    tab_chat: '–ß–∞—Ç',
    tab_documents: '–î–æ–∫—É–º–µ–Ω—Ç—ã',
    tab_search: '–ü–æ–∏—Å–∫',
    tab_rag_config: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ RAG',
    tab_rag_test: '–¢–µ—Å—Ç RAG',
    
    // Chat interface
    chat_placeholder: '–ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö... –Ω–∞–ø—Ä–∏–º–µ—Ä: "–ö–∞–∫–∏–µ –∫–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã –≤ –æ—Ç—á—ë—Ç–µ –∑–∞ 3 –∫–≤–∞—Ä—Ç–∞–ª?"',
    chat_send: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
    chat_clear: '–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç',
    chat_welcome_title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à RAG –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! üëã',
    chat_welcome_desc: '–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö, –∏ —è –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã.',
    
    // Documents
    documents_upload: '–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã',
    documents_drop_zone: '–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞',
    documents_supported: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, TXT, MD, DOCX',
    documents_delete: '–£–¥–∞–ª–∏—Ç—å',
    documents_view: '–ü—Ä–æ—Å–º–æ—Ç—Ä',
    documents_no_docs: '–î–æ–∫—É–º–µ–Ω—Ç—ã –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã',
    documents_library: '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    documents_upload_first: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à –ø–µ—Ä–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.',
    documents_start_chatting: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–µ–π –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π.',
    
    // Upload features
    instant_processing: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞',
    secure_private: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ',
    ai_powered_analysis: '–ò–ò-–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö',
    
    // Chat suggestions
    summarize_topics: '–û–±–∑–æ—Ä —Ç–µ–º',
    key_insights: '–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã',
    important_dates: '–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã',
    
    // Search
    search_placeholder: '–ü–æ–∏—Å–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö... –Ω–∞–ø—Ä–∏–º–µ—Ä: "–∞–ª–≥–æ—Ä–∏—Ç–º—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"',
    search_button: '–ù–∞–π—Ç–∏',
    search_no_results: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
    search_documents: '–ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
    search_results: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞',
    
    // RAG Config
    config_title: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è RAG',
    config_subtitle: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞—à–µ–≥–æ RAG –∫–æ–Ω–≤–µ–π–µ—Ä–∞',
    config_embedding_model: '–ú–æ–¥–µ–ª—å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤',
    config_mode: '–†–µ–∂–∏–º RAG',
    config_chunk_size: '–†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞',
    config_chunk_overlap: '–ü–µ—Ä–µ–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–æ–≤',
    config_top_k: '–¢–æ–ø K —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
    config_similarity_threshold: '–ü–æ—Ä–æ–≥ —Å—Ö–æ–∂–µ—Å—Ç–∏',
    config_save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é',
    config_reset: '–°–±—Ä–æ—Å–∏—Ç—å –∫ —É–º–æ–ª—á–∞–Ω–∏—é',
    
    // Test RAG
    test_title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RAG',
    test_subtitle: '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é RAG —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤',
    test_query_placeholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å... –Ω–∞–ø—Ä–∏–º–µ—Ä: "–û–±—ä—è—Å–Ω–∏—Ç–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—é, –æ–ø–∏—Å–∞–Ω–Ω—É—é –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–∞–±–æ—Ç–µ"',
    test_run: '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç',
    test_results: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞',
    test_query_label: '–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:',
    
    // Fine-tune Panel
    finetune_title: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
    finetune_subtitle: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —Å LoRA, QLoRA –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π RAG',
    finetune_config: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
    finetune_models: '–ú–æ–¥–µ–ª–∏',
    finetune_logs: '–õ–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è',
    finetune_charts: '–ì—Ä–∞—Ñ–∏–∫–∏ –ø–æ—Ç–µ—Ä—å',
    finetune_dataset: '–û–±—É—á–∞—é—â–∏–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö',
    finetune_model: '–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å',
    finetune_parameters: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è',
    finetune_start: '–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
    finetune_stop: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
    finetune_progress: '–ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è',
    finetune_epochs: '–≠–ø–æ—Ö–∏',
    finetune_learning_rate: '–°–∫–æ—Ä–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è',
    finetune_batch_size: '–†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞',
    finetune_basic_config: '–ë–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
    finetune_lora_config: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LoRA –∏ QLoRA',
    finetune_training_params: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è',
    finetune_rag_settings: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ RAG',
    finetune_advanced_config: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
    finetune_models_manage: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏',
    finetune_logs_monitor: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    finetune_charts_visualize: '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Ç–µ—Ä—å –æ–±—É—á–µ–Ω–∏—è –∏ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
    
    // Advanced Configuration
    advanced_config: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è',
    save_steps: '–®–∞–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
    eval_steps: '–®–∞–≥–∏ –æ—Ü–µ–Ω–∫–∏',
    logging_steps: '–®–∞–≥–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è',
    dataloader_workers: '–†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã DataLoader',
    instruction_template: '–®–∞–±–ª–æ–Ω –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
    training_summary: '–°–≤–æ–¥–∫–∞ –æ–±—É—á–µ–Ω–∏—è',
    default_template: '–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é',
    
    // Playground Panel
    playground_title: '–ü–µ—Å–æ—á–Ω–∏—Ü–∞',
    playground_subtitle: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ä–µ–¥–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π',
    playground_prompt: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∑–¥–µ—Å—å...',
    playground_prompt_placeholder: '–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –≤—ã–≤–æ–¥–æ–≤ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞..."',
    playground_model_select: '–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å',
    playground_temperature: '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
    playground_max_tokens: '–ú–∞–∫—Å. —Ç–æ–∫–µ–Ω–æ–≤',
    playground_generate: '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å',
    playground_clear: '–û—á–∏—Å—Ç–∏—Ç—å',
    playground_response: '–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏',
    
    // Monitor Panel
    monitor_title: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
    monitor_subtitle: '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    monitor_overview: '–û–±–∑–æ—Ä',
    monitor_system: '–°–∏—Å—Ç–µ–º–∞',
    monitor_tokens: '–¢–æ–∫–µ–Ω—ã',
    monitor_metrics: '–ú–µ—Ç—Ä–∏–∫–∏',
    monitor_logs: '–õ–æ–≥–∏',
    monitor_cpu_usage: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¶–ü',
    monitor_memory_usage: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏',
    monitor_disk_usage: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞',
    monitor_network: '–°–µ—Ç—å',
    monitor_uptime: '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã',
    monitor_requests: '–ó–∞–ø—Ä–æ—Å—ã',
    monitor_errors: '–û—à–∏–±–∫–∏',
    
    // Common actions
    save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    cancel: '–û—Ç–º–µ–Ω–∞',
    edit: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
    delete: '–£–¥–∞–ª–∏—Ç—å',
    upload: '–ó–∞–≥—Ä—É–∑–∏—Ç—å',
    download: '–°–∫–∞—á–∞—Ç—å',
    loading: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    error: '–û—à–∏–±–∫–∞',
    success: '–£—Å–ø–µ—Ö',
    warning: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
    info: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
  }
};

// Create a derived store for the current translations
export const t = derived(currentLanguage, ($currentLanguage) => translations[$currentLanguage]);

// Helper function to get translation
export function translate(key: keyof typeof translations.en): string {
  let currentTranslations: any;
  currentLanguage.subscribe(lang => {
    currentTranslations = translations[lang];
  })();
  return currentTranslations?.[key] || translations.en[key] || key;
}

// Initialize language from localStorage if available
if (typeof window !== 'undefined') {
  const stored = localStorage.getItem('language') as Language;
  if (stored && (stored === 'en' || stored === 'ru')) {
    currentLanguage.set(stored);
  }
  
  currentLanguage.subscribe((lang) => {
    localStorage.setItem('language', lang);
    document.documentElement.setAttribute('lang', lang);
  });
}
